#include <stdio.h>
int main() {
    char text[100];
    char encrypted[100];
    char decrypted[100];
    int a, b, a_inv = 0, i;
    printf("Enter text : ");
    scanf("%s", text);
    printf("Enter key 'a' (must be coprime with 26): ");
    scanf("%d", &a);
    printf("Enter key 'b': ");
    scanf("%d", &b);
    for (i = 1; i < 26; i++) {
        if ((a * i) % 26 == 1) {
            a_inv = i;
            break;
        }
    }
    if (a_inv == 0) {
        printf("Invalid key 'a'. No modular inverse exists.\n");
        return 1;
    }
    for (i = 0; text[i] != '\0'; i++) {
        char ch = text[i];
        if (ch >= 'A' && ch <= 'Z')
            encrypted[i] = ((a * (ch - 'A') + b) % 26) + 'A';
        else if (ch >= 'a' && ch <= 'z')
            encrypted[i] = ((a * (ch - 'a') + b) % 26) + 'a';
        else if (ch == '_')
            encrypted[i] = ' ';
        else
            encrypted[i] = ch;
    }
    encrypted[i] = '\0';
    for (i = 0; encrypted[i] != '\0'; i++) 
	{    
        char ch = encrypted[i];
        if (ch >= 'A' && ch <= 'Z')
            decrypted[i] = (a_inv * ((ch - 'A' - b + 26) % 26)) % 26 + 'A';
        else if (ch >= 'a' && ch <= 'z')
            decrypted[i] = (a_inv * ((ch - 'a' - b + 26) % 26)) % 26 + 'a';
        else if (ch == ' ')
            decrypted[i] = ' ';
        else
            decrypted[i] = ch;
    }
    decrypted[i] = '\0';
    printf("Encrypted: %s\n", encrypted);
    printf("Decrypted: %s\n", decrypted);
    return 0;
}
